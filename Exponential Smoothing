import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
sns.set()

def exponential_smoothing(series, alpha):
    '''
    series: dataframe with timeseries
    alpha: float[0.0, 1.0], smoothing parameter
    '''
    result = [series[0]] # first value is same as series
    for n in range(1, len(series)):
        result.append(alpha*series[n] + (1 - alpha) * result[n-1])
    return result


def plotExponentialSmoothing(series, alphas):
    with plt.style.context('seaborn-white'):
        plt.figure(figsize=(15, 7))
        for alpha in alphas:
            result = exponential_smoothing(series, alpha)
            plt.plot(result, label='Alpha {}'.format(alpha))
        plt.plot(series.values, 'c', label='Actual')
        plt.legend(loc='best')
        plt.axis('tight')
        plt.title('Exponential Smoothing')
        plt.grid(True)
